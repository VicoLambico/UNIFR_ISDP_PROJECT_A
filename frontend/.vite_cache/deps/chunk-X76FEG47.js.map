{
  "version": 3,
  "sources": ["../../node_modules/aurelia/src/index.ts"],
  "sourcesContent": ["import { DI, IContainer, Registration } from '@aurelia/kernel';\nimport { StandardConfiguration, Aurelia as $Aurelia, IPlatform, CustomElementType, CustomElement, ICustomElementViewModel } from '@aurelia/runtime-html';\nimport { BrowserPlatform } from '@aurelia/platform-browser';\nimport type { ISinglePageAppConfig, IEnhancementConfig } from '@aurelia/runtime-html';\n\nexport const PLATFORM = BrowserPlatform.getOrCreate(globalThis);\nexport { IPlatform };\n\nfunction createContainer(): IContainer {\n  return DI.createContainer()\n    .register(\n      Registration.instance(IPlatform, PLATFORM),\n      StandardConfiguration,\n    );\n}\n\nexport class Aurelia extends $Aurelia {\n  public constructor(container: IContainer = createContainer()) {\n    super(container);\n  }\n\n  public static app(config: ISinglePageAppConfig | CustomElementType): Omit<Aurelia, 'register' | 'app' | 'enhance'> {\n    return new Aurelia().app(config);\n  }\n\n  public static enhance<T extends ICustomElementViewModel>(config: IEnhancementConfig<T>): ReturnType<$Aurelia['enhance']> {\n    return new Aurelia().enhance(config);\n  }\n\n  public static register(...params: readonly unknown[]): Aurelia {\n    return new Aurelia().register(...params);\n  }\n\n  public app(config: ISinglePageAppConfig | CustomElementType): Omit<this, 'register' | 'app' | 'enhance'> {\n    if (CustomElement.isType(config)) {\n      // Default to custom element element name\n      const definition = CustomElement.getDefinition(config);\n      let host = document.querySelector(definition.name);\n      if (host === null) {\n        // When no target is found, default to body.\n        // For example, when user forgot to write <my-app></my-app> in html.\n        host = document.body;\n      }\n      return super.app({\n        host: host as HTMLElement,\n        component: config\n      });\n    }\n\n    return super.app(config);\n  }\n}\n\nexport default Aurelia;\n\nexport {\n  type ITask,\n  Platform,\n  type QueueTaskOptions,\n  Task,\n  TaskAbortError,\n  TaskQueue,\n  type TaskStatus\n} from '@aurelia/platform';\n\nexport {\n  all,\n  DI,\n  IContainer,\n  type IFactory,\n  inject,\n  resolve,\n  type IRegistration,\n  type IRegistry,\n  type IResolver,\n  IServiceLocator,\n  type Key,\n  lazy,\n  factory,\n  newInstanceOf,\n  newInstanceForScope,\n  optional,\n  resource,\n  allResources,\n  ignore,\n  Registration,\n  singleton,\n  transient,\n  // Injectable,\n  // InterfaceSymbol,\n  InstanceProvider,\n  type Resolved,\n  // Transformer,\n\n  type Class,\n  type Constructable,\n  type ConstructableClass,\n  // Diff,\n  type IDisposable,\n  // IFrameRequestCallback,\n  type IIndexable,\n  // IPerformance,\n  // ITimerHandler,\n  // IWindowOrWorkerGlobalScope,\n  // KnownKeys,\n  // NoInfer,\n  // Omit,\n  // OptionalKnownKeys,\n  // OptionalValuesOf,\n  // Overwrite,\n  // Param0,\n  // Param1,\n  // Param2,\n  // Param3,\n  // Pick2,\n  // Pick3,\n  // Primitive,\n  // Public,\n  // Purify,\n  // RequiredKnownKeys,\n  // RequiredValuesOf,\n  // StrictPrimitive,\n  // Unwrap,\n  // ValuesOf,\n  // Writable,\n  // IfEquals,\n  // ReadonlyKeys,\n  // WritableKeys,\n\n  // IConsoleLike,\n  type ColorOptions,\n  // ILogConfig,\n  // ILogEvent,\n  // ILogEventFactory,\n  // ISink,\n  ILogger,\n  // LogConfig,\n  // DefaultLogEvent,\n  // DefaultLogEventFactory,\n  // DefaultLogger,\n  ConsoleSink,\n  LoggerConfiguration,\n\n  // relativeToFile,\n  // join,\n  // parseQueryString,\n  // IQueryParams,\n\n  emptyArray,\n  emptyObject,\n  noop,\n\n  // ITraceInfo,\n  // ITraceWriter,\n  // ILiveLoggingOptions,\n  LogLevel,\n\n  // IResourceDefinition,\n  // IResourceDescriptions,\n  // IResourceKind,\n  // IResourceType,\n  // ResourceDescription,\n  // ResourcePartDescription,\n  // fromAnnotationOrDefinitionOrTypeOrDefault,\n  // fromAnnotationOrTypeOrDefault,\n  // fromDefinitionOrDefault,\n\n  EventAggregator,\n  IEventAggregator,\n\n  isArrayIndex,\n  camelCase,\n  kebabCase,\n  pascalCase,\n  toArray,\n  bound,\n  // mergeArrays,\n  // firstDefined,\n  // getPrototypeChain,\n} from '@aurelia/kernel';\n\nexport {\n  IExpressionParser,\n  CustomExpression,\n} from '@aurelia/expression-parser';\n\nexport {\n  type CollectionKind,\n  batch,\n  // connects,\n  // observes,\n  // callsFunction,\n  // hasAncestor,\n  // isAssignable,\n  // isLeftHandSide,\n  // isPrimary,\n  // isResource,\n  // hasBind,\n  // hasUnbind,\n  // isLiteral,\n  // arePureLiterals,\n  // isPureLiteral,\n\n  // IsResource,\n  // HasBind,\n  // HasUnbind,\n  // HasAncestor,\n\n  // IObserverLocatorBasedConnectable,\n  // IConnectableBinding,\n  // connectable,\n\n  // ArrayObserver,\n  // disableArrayObservation,\n\n  // MapObserver,\n  // enableMapObservation,\n  // disableMapObservation,\n\n  // SetObserver,\n  // enableSetObservation,\n  // disableSetObservation,\n\n  // BindingContext,\n  // OverrideContext,\n\n  // CollectionLengthObserver,\n\n  // CollectionSizeObserver,\n\n  // IDirtyChecker,\n  // DirtyCheckProperty,\n  // DirtyCheckSettings,\n\n  ComputedObserver,\n\n  IObservation,\n  // IObjectObservationAdapter,\n  IObserverLocator,\n  // ITargetObserverLocator,\n  // ITargetAccessorLocator,\n  // getCollectionObserver,\n  // ObserverLocator,\n\n  // PrimitiveObserver,\n\n  // PropertyAccessor,\n\n  // SetterObserver,\n\n  subscriberCollection,\n\n  // SignalableBinding,\n  // SignalBindingBehavior,\n\n  // ObserveShallow,\n  // ISanitizer,\n  // SanitizeValueConverter,\n\n  // ViewValueConverter,\n\n  observable,\n\n  // DefaultResources as RuntimeDefaultResources,\n  // RuntimeConfiguration,\n\n  // ExpressionKind,\n  // Hooks,\n  // State,\n\n  // CallBindingInstruction,\n  // HydrateAttributeInstruction,\n  // HydrateElementInstruction,\n  // HydrateTemplateController,\n  // InterpolationInstruction,\n  // IteratorBindingInstruction,\n  // LetBindingInstruction,\n  // HydrateLetElementInstruction,\n  // RefBindingInstruction,\n  // SetPropertyInstruction,\n\n  // ViewModelKind,\n  // IBinding,\n  // IViewModel,\n  // IController,\n  // IContainer,\n  // IViewCache,\n  // MountStrategy,\n\n  // AccessorOrObserver,\n  // Collection,\n  // CollectionKind,\n  // DelegationStrategy,\n  // IAccessor,\n  // IBindingContext,\n  // ICollectionChangeTracker,\n  // ICollectionSubscriber,\n\n  type IndexMap,\n  Scope,\n\n} from '@aurelia/runtime';\n\nexport {\n  attributePattern,\n  AttributePattern,\n  IAttrMapper,\n  IAttributeParser,\n  IAttributePattern,\n\n  bindingCommand,\n  BindingCommand,\n  type BindingCommandInstance,\n\n  ITemplateCompiler,\n  ITemplateElementFactory,\n  ITemplateCompilerHooks,\n  TemplateCompilerHooks,\n  templateCompilerHooks,\n\n  type BindingCommandStaticAuDefinition,\n\n} from '@aurelia/template-compiler';\n\nexport {\n  // BindingBehaviorDefinition,\n  // PartialBindingBehaviorDefinition,\n  // BindingBehaviorKind,\n  // BindingBehaviorDecorator,\n  // BindingBehaviorType,\n  type BindingBehaviorInstance,\n\n  // ValueConverterDefinition,\n  // PartialValueConverterDefinition,\n  // ValueConverterKind,\n  // ValueConverterDecorator,\n  // ValueConverterType,\n  type ValueConverterInstance,\n\n  // BindingModeBehavior,\n  // OneTimeBindingBehavior,\n  // ToViewBindingBehavior,\n  // FromViewBindingBehavior,\n  // TwoWayBindingBehavior,\n\n  // DebounceBindingBehavior,\n\n  // SignalableBinding,\n  // SignalBindingBehavior,\n\n  // ThrottleBindingBehavior,\n\n  customAttribute,\n  CustomAttribute,\n  // CustomAttributeDefinition\n  // CustomAttributeKind,\n  // CustomAttributeType,\n  // PartialCustomAttributeDefinition,\n  templateController,\n\n  // ObserveShallow,\n\n  // If,\n  // Else,\n\n  // Repeat,\n  IRepeatableHandlerResolver,\n  IRepeatableHandler,\n  ArrayLikeHandler,\n\n  // Replaceable,\n\n  // With,\n\n  containerless,\n  customElement,\n  CustomElement,\n  capture,\n  // CustomElementDecorator,\n  // CustomElementKind,\n  // CustomElementType,\n  // CustomElementDefinition,\n  // PartialCustomElementDefinition,\n  // IElementProjector,\n  // IProjectorLocator,\n  useShadowDOM,\n\n  // ISanitizer,\n  // SanitizeValueConverter,\n\n  // ViewValueConverter,\n\n  AppTask,\n  // TaskStatus,\n  // QueueTaskTargetOptions,\n\n  BindingMode,\n\n  bindable,\n  type PartialBindableDefinition,\n  // BindableDefinition,\n  Bindable,\n  coercer,\n\n  type PartialChildrenDefinition,\n  // Children,\n  children,\n\n  // These exports are temporary until we have a proper way to unit test them\n  Controller,\n\n  ViewFactory,\n  // IViewLocator,\n  // ViewLocator,\n  // view,\n  // Views,\n\n  // Aurelia, // Replaced by quick-start wrapper\n  // IDOMInitializer,\n  type ISinglePageAppConfig,\n  IAppRoot,\n\n  // DefaultResources as RuntimeDefaultResources,\n  // RuntimeConfiguration,\n\n  // AttributeInstruction,\n  // ICallBindingInstruction,\n  // IHydrateAttributeInstruction,\n  // IHydrateElementInstruction,\n  // IHydrateLetElementInstruction,\n  // IHydrateTemplateController,\n  // IInterpolationInstruction,\n  // IIteratorBindingInstruction,\n  // ILetBindingInstruction,\n  // IInstructionRow,\n  // IPropertyBindingInstruction,\n  // IRefBindingInstruction,\n  // ISetPropertyInstruction,\n  // isInstruction,\n  // IInstruction,\n  // NodeInstruction,\n  // IInstruction,\n  // InstructionType,\n  // PartialCustomElementDefinitionParts,\n\n  // DOM, should expose the one exported in runtime-html\n  INode,\n  IEventTarget,\n  IRenderLocation,\n\n  // ViewModelKind,\n  // IBinding,\n  // IViewModel,\n  type ICustomAttributeViewModel,\n  type ICustomElementViewModel,\n  IController,\n  // IContainer,\n  // IViewCache,\n  IViewFactory,\n  // MountStrategy,\n\n  // AccessorOrObserver,\n  // Collection,\n  // CollectionKind,\n  // DelegationStrategy,\n  // IAccessor,\n  // IBindingContext,\n  // ICollectionChangeTracker,\n  // ICollectionSubscriber,\n\n  IFlushQueue,\n  FlushQueue,\n  type IFlushable,\n\n  renderer,\n\n  // DefaultBindingLanguage as JitDefaultBindingLanguage,\n\n  // JitConfiguration,\n\n  // Access,\n  // Precedence,\n  // These exports are temporary until we have a proper way to unit test them\n\n  // parseExpression,\n\n  // BindableInfo,\n  // ElementInfo,\n  // AttrInfo,\n\n  // AnySymbol,\n  // BindingSymbol,\n  // CustomAttributeSymbol,\n  // CustomElementSymbol,\n  // ElementSymbol,\n  // LetElementSymbol,\n  // NodeSymbol,\n  // ParentNodeSymbol,\n  // PlainAttributeSymbol,\n  // PlainElementSymbol,\n  // ReplacePartSymbol,\n  // ResourceAttributeSymbol,\n  // SymbolFlags,\n  // SymbolWithBindings,\n  // SymbolWithMarker,\n  // SymbolWithTemplate,\n  // TemplateControllerSymbol,\n  // TextSymbol\n\n  IAurelia,\n  // Listener,\n\n  // AttributeBinding,\n\n  // AttributeNSAccessor,\n\n  // IInputElement,\n  // CheckedObserver,\n\n  // ClassAttributeAccessor,\n\n  // DataAttributeAccessor,\n\n  // EventSubscriber,\n  // EventDelegator,\n\n  NodeObserverLocator,\n\n  // TargetAccessorLocator,\n  // TargetObserverLocator,\n\n  // ISelectElement,\n  // IOptionElement,\n  // SelectValueObserver,\n\n  // StyleAttributeAccessor,\n\n  // ISVGAnalyzer,\n\n  // ValueAttributeObserver,\n\n  // AttrBindingBehavior,\n\n  // SelfBindingBehavior,\n\n  // UpdateTriggerBindingBehavior,\n\n  // Focus,\n\n  // Portal,\n  // PortalTarget,\n  // PortalLifecycleCallback,\n\n  // Subject,\n  // Compose,\n  type IAuSlot,\n  IAuSlotsInfo,\n  AuSlotsInfo,\n  IAuSlotWatcher,\n  slotted,\n\n  // DefaultComponents as RuntimeHtmlDefaultComponents,\n\n  // CompiledTemplate,\n  ChildrenBinding,\n  // IRenderer,\n  // IRenderingEngine,\n  // ITemplate,\n\n  RuntimeTemplateCompilerImplementation,\n\n  // RenderContext\n\n  // AttrSyntax,\n\n  // IAttributeParser,\n\n  // AtPrefixedTriggerAttributePattern,\n  // ColonPrefixedBindAttributePattern,\n  // DotSeparatedAttributePattern,\n  // RefAttributePattern,\n\n  alias,\n  registerAliases,\n\n  bindingBehavior,\n  BindingBehavior,\n\n  valueConverter,\n  ValueConverter,\n\n  // BindingCommandDefinition,\n  // BindingCommandKind,\n  // BindingCommandType,\n\n  // CallBindingCommand,\n  // DefaultBindingCommand,\n  // ForBindingCommand,\n  // FromViewBindingCommand,\n  // OneTimeBindingCommand,\n  // ToViewBindingCommand,\n  // TwoWayBindingCommand,\n\n  type IEnhancementConfig,\n  type IHydratedParentController,\n\n  // DefaultComponents as JitDefaultComponents,\n\n  // DefaultBindingSyntax,\n\n  ShortHandBindingSyntax,\n\n  // DefaultResources as RuntimeHtmlDefaultResources,\n\n  // DefaultRenderers,\n\n  // StandardConfiguration,\n\n  // AttributeInstruction,\n  // IInstructionRow,\n  // NodeInstruction,\n  // IInstruction,\n  // InstructionType,\n  // IAttributeBindingInstruction,\n  // ISetAttributeInstruction,\n  // isInstruction,\n\n  // NodeSequenceFactory,\n  // FragmentNodeSequence,\n\n  // AttributeBindingInstruction,\n  // SetAttributeInstruction,\n  // SetClassAttributeInstruction,\n  // SetStyleAttributeInstruction,\n  // StylePropertyBindingInstruction,\n\n  // ContainerlessProjector,\n  // HostProjector,\n  // HTMLProjectorLocator,\n  // ShadowDOMProjector,\n\n  StyleConfiguration,\n  // styles,\n  type IShadowDOMConfiguration,\n\n  // CSSModulesProcessorRegistry,\n  cssModules,\n\n  // ShadowDOMRegistry,\n  // IShadowDOMStyleFactory,\n  shadowCSS,\n  processContent,\n\n  // AdoptedStyleSheetsStyles,\n  // StyleElementStyles,\n  // IShadowDOMStyles,\n  // IShadowDOMGlobalStyles\n\n  // StandardConfiguration,\n\n  ILifecycleHooks,\n  type LifecycleHook,\n  LifecycleHooks,\n  lifecycleHooks,\n\n  watch,\n\n  IKeyMapping,\n  IModifiedEventHandlerCreator,\n  IEventModifier,\n  type IModifiedEventHandler,\n\n  ISignaler,\n\n  IWindow,\n  IHistory,\n} from '@aurelia/runtime-html';\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAKa,IAAA,WAAW,gBAAgB,YAAY,UAAU;AAG9D,SAAS,kBAAe;AACtB,SAAO,GAAG,gBAAe,EACtB,SACC,aAAa,SAAS,WAAW,QAAQ,GACzC,qBAAqB;AAE3B;AAEM,IAAOA,WAAP,MAAO,iBAAgBC,QAAQ;EACnC,YAAmB,YAAwB,gBAAe,GAAE;AAC1D,UAAM,SAAS;;EAGV,OAAO,IAAI,QAAgD;AAChE,WAAO,IAAI,SAAO,EAAG,IAAI,MAAM;;EAG1B,OAAO,QAA2C,QAA6B;AACpF,WAAO,IAAI,SAAO,EAAG,QAAQ,MAAM;;EAG9B,OAAO,YAAY,QAA0B;AAClD,WAAO,IAAI,SAAO,EAAG,SAAS,GAAG,MAAM;;EAGlC,IAAI,QAAgD;AACzD,QAAI,cAAc,OAAO,MAAM,GAAG;AAEhC,YAAM,aAAa,cAAc,cAAc,MAAM;AACrD,UAAI,OAAO,SAAS,cAAc,WAAW,IAAI;AACjD,UAAI,SAAS,MAAM;AAGjB,eAAO,SAAS;;AAElB,aAAO,MAAM,IAAI;QACf;QACA,WAAW;MACZ,CAAA;;AAGH,WAAO,MAAM,IAAI,MAAM;;AAE1B;",
  "names": ["Aurelia", "$Aurelia"]
}
