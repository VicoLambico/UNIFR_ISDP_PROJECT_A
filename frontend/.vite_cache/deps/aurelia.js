import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  Aurelia,
  PLATFORM
} from "./chunk-X76FEG47.js";
import {
  AppTask,
  ArrayLikeHandler,
  AttributePattern,
  AuSlotsInfo,
  Bindable,
  BindingBehavior,
  BindingCommand,
  BindingMode,
  ChildrenBinding,
  ComputedObserver,
  ConsoleSink,
  Controller,
  CustomAttribute,
  CustomElement,
  CustomExpression,
  DI,
  EventAggregator,
  FlushQueue,
  IAppRoot,
  IAttrMapper,
  IAttributeParser,
  IAttributePattern,
  IAuSlotWatcher,
  IAuSlotsInfo,
  IAurelia,
  IContainer,
  IController,
  IEventAggregator,
  IEventModifier,
  IEventTarget,
  IExpressionParser,
  IFlushQueue,
  IHistory,
  IKeyMapping,
  ILifecycleHooks,
  ILogger,
  IModifiedEventHandlerCreator,
  INode,
  IObservation,
  IObserverLocator,
  IPlatform,
  IRenderLocation,
  IRepeatableHandler,
  IRepeatableHandlerResolver,
  IServiceLocator,
  ISignaler,
  ITemplateCompiler,
  ITemplateCompilerHooks,
  ITemplateElementFactory,
  IViewFactory,
  IWindow,
  InstanceProvider,
  LifecycleHooks,
  LogLevel,
  LoggerConfiguration,
  NodeObserverLocator,
  Platform,
  Registration,
  RuntimeTemplateCompilerImplementation,
  Scope,
  ShortHandBindingSyntax,
  StyleConfiguration,
  Task,
  TaskAbortError,
  TaskQueue,
  TemplateCompilerHooks,
  ValueConverter,
  ViewFactory,
  alias,
  all,
  allResources,
  attributePattern,
  batch,
  bindable,
  bindingBehavior,
  bindingCommand,
  bound,
  camelCase,
  capture,
  children,
  coercer,
  containerless,
  cssModules,
  customAttribute,
  customElement,
  emptyArray,
  emptyObject,
  factory,
  ignore,
  inject,
  isArrayIndex,
  kebabCase,
  lazy,
  lifecycleHooks,
  newInstanceForScope,
  newInstanceOf,
  noop,
  observable,
  optional,
  pascalCase,
  processContent,
  registerAliases,
  renderer,
  resolve,
  resource,
  shadowCSS,
  singleton,
  slotted,
  subscriberCollection,
  templateCompilerHooks,
  templateController,
  toArray,
  transient,
  useShadowDOM,
  valueConverter,
  watch
} from "./chunk-S7YNWOLH.js";
import "./chunk-OFI5MVGH.js";
export {
  AppTask,
  ArrayLikeHandler,
  AttributePattern,
  AuSlotsInfo,
  Aurelia,
  Bindable,
  BindingBehavior,
  BindingCommand,
  BindingMode,
  ChildrenBinding,
  ComputedObserver,
  ConsoleSink,
  Controller,
  CustomAttribute,
  CustomElement,
  CustomExpression,
  DI,
  EventAggregator,
  FlushQueue,
  IAppRoot,
  IAttrMapper,
  IAttributeParser,
  IAttributePattern,
  IAuSlotWatcher,
  IAuSlotsInfo,
  IAurelia,
  IContainer,
  IController,
  IEventAggregator,
  IEventModifier,
  IEventTarget,
  IExpressionParser,
  IFlushQueue,
  IHistory,
  IKeyMapping,
  ILifecycleHooks,
  ILogger,
  IModifiedEventHandlerCreator,
  INode,
  IObservation,
  IObserverLocator,
  IPlatform,
  IRenderLocation,
  IRepeatableHandler,
  IRepeatableHandlerResolver,
  IServiceLocator,
  ISignaler,
  ITemplateCompiler,
  ITemplateCompilerHooks,
  ITemplateElementFactory,
  IViewFactory,
  IWindow,
  InstanceProvider,
  LifecycleHooks,
  LogLevel,
  LoggerConfiguration,
  NodeObserverLocator,
  PLATFORM,
  Platform,
  Registration,
  RuntimeTemplateCompilerImplementation,
  Scope,
  ShortHandBindingSyntax,
  StyleConfiguration,
  Task,
  TaskAbortError,
  TaskQueue,
  TemplateCompilerHooks,
  ValueConverter,
  ViewFactory,
  alias,
  all,
  allResources,
  attributePattern,
  batch,
  bindable,
  bindingBehavior,
  bindingCommand,
  bound,
  camelCase,
  capture,
  children,
  coercer,
  containerless,
  cssModules,
  customAttribute,
  customElement,
  Aurelia as default,
  emptyArray,
  emptyObject,
  factory,
  ignore,
  inject,
  isArrayIndex,
  kebabCase,
  lazy,
  lifecycleHooks,
  newInstanceForScope,
  newInstanceOf,
  noop,
  observable,
  optional,
  pascalCase,
  processContent,
  registerAliases,
  renderer,
  resolve,
  resource,
  shadowCSS,
  singleton,
  slotted,
  subscriberCollection,
  templateCompilerHooks,
  templateController,
  toArray,
  transient,
  useShadowDOM,
  valueConverter,
  watch
};
